<controls:MetroWindow
    x:Class="YoutubeCutter.Views.ShellWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:VM="clr-namespace:YoutubeCutter.ViewModels"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:YoutubeCutter.Converters"
    xmlns:customControls="clr-namespace:YoutubeCutter.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:properties="clr-namespace:YoutubeCutter.Properties"
    xmlns:templateSelectors="clr-namespace:YoutubeCutter.TemplateSelectors"
    Title="{x:Static properties:Resources.AppDisplayName}"
    MinWidth="500"
    MinHeight="350"
    Style="{StaticResource CustomMetroWindow}"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Button
                Width="{Binding ElementName=hamburgerMenu, Path=CompactPaneLength}"
                AutomationProperties.Name="{x:Static properties:Resources.ShellGoBackButton}"
                Command="{Binding GoBackCommand}"
                ToolTip="{x:Static properties:Resources.ShellGoBackButton}">
                <TextBlock
                    AutomationProperties.Name="{x:Static properties:Resources.ShellGoBackButton}"
                    FontFamily="Segoe MDL2 Assets"
                    FontSize="14"
                    Text="&#xE72B;" />
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>
    <controls:MetroWindow.Resources>
        <converters:StringToImageSourceConverter x:Key="StringToImageSourceConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:NullableStringToVisibilityConverter x:Key="NullableStringToVisibilityConverter" />
        <converters:NullableStringToVisibilityConverterInverse x:Key="NullableStringToVisibilityConverterInverse" />
        <templateSelectors:MenuItemTemplateSelector x:Key="MenuItemTemplateSelector">
            <templateSelectors:MenuItemTemplateSelector.GlyphDataTemplate>
                <DataTemplate DataType="{x:Type controls:HamburgerMenuGlyphItem}">
                    <Grid Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="16"
                            Text="{Binding Glyph}"
                            ToolTip="{Binding Label}" />
                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Text="{Binding Label}" />
                    </Grid>
                </DataTemplate>
            </templateSelectors:MenuItemTemplateSelector.GlyphDataTemplate>
            <templateSelectors:MenuItemTemplateSelector.VideoDataTemplate>
                <DataTemplate DataType="{x:Type customControls:VideosHamburgerMenuItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="PaneOpenRow">
                                <RowDefinition.Style>
                                    <Style TargetType="{x:Type RowDefinition}">
                                        <Setter Property="Height" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.IsPaneOpen, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}" Value="True">
                                                <Setter Property="Height" Value="96" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RowDefinition.Style>
                            </RowDefinition>
                            <RowDefinition Name="PaneClosedRow">
                                <RowDefinition.Style>
                                    <Style TargetType="{x:Type RowDefinition}">
                                        <Setter Property="Height" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.IsPaneOpen, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}" Value="False">
                                                <Setter Property="Height" Value="48" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RowDefinition.Style>
                            </RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="16"
                                Text="{Binding VideoThumbnailProperty}" />
                            <Grid Grid.Column="1" Visibility="{Binding Path=ChannelNameProperty, Converter={StaticResource NullableStringToVisibilityConverterInverse}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="6*" />
                                    <RowDefinition Height="4*" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    Text="{Binding VideoTitleProperty}" />
                                <TextBlock
                                    Grid.Row="1"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    Text="{Binding ChannelNameProperty}" />
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Ellipse Stretch="Fill" Stroke="Black">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding ChannelThumbnailProperty, Converter={StaticResource StringToImageSourceConverter}, ConverterParameter=Channel}" Stretch="UniformToFill" />
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </templateSelectors:MenuItemTemplateSelector.VideoDataTemplate>
            <templateSelectors:MenuItemTemplateSelector.ImageDataTemplate>
                <DataTemplate DataType="{x:Type controls:HamburgerMenuImageItem}">
                    <Grid Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Ellipse
                            Grid.Column="0"
                            Width="24"
                            Height="24"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ToolTip="{Binding Label}">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding Thumbnail}" />
                            </Ellipse.Fill>
                        </Ellipse>
                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Text="{Binding Label}" />
                    </Grid>
                </DataTemplate>
            </templateSelectors:MenuItemTemplateSelector.ImageDataTemplate>
        </templateSelectors:MenuItemTemplateSelector>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Content>
        <controls:HamburgerMenu
            x:Name="hamburgerMenu"
            DisplayMode="CompactInline"
            HamburgerButtonName="{x:Static properties:Resources.ShellHamburgerButtonName}"
            IsPaneOpen="{Binding Path=IsPaneOpen, Mode=OneWayToSource}"
            ItemCommand="{Binding MenuItemInvokedCommand}"
            ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
            ItemsSource="{Binding MenuItems}"
            OptionsItemCommand="{Binding OptionsMenuItemInvokedCommand}"
            OptionsItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
            OptionsItemsSource="{Binding OptionMenuItems}"
            SelectedItem="{Binding SelectedMenuItem}"
            SelectedOptionsItem="{Binding SelectedOptionsMenuItem}">
            <controls:HamburgerMenu.Content>
                <Frame
                    x:Name="shellFrame"
                    Grid.Row="1"
                    Focusable="False"
                    NavigationUIVisibility="Hidden" />
            </controls:HamburgerMenu.Content>
        </controls:HamburgerMenu>
    </controls:MetroWindow.Content>
</controls:MetroWindow>
