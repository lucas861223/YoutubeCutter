<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>YoutubeCutter</value>
  </data>
  <data name="ClipItemDuration" xml:space="preserve">
    <value>Duration:</value>
  </data>
  <data name="ClipItemEndLongerThanVideo" xml:space="preserve">
    <value>End time longer than video length</value>
  </data>
  <data name="ClipItemEndTimeEarlier" xml:space="preserve">
    <value>End time is earlier than Start time</value>
  </data>
  <data name="ClipItemFileAlreadyExists" xml:space="preserve">
    <value>This file already exists</value>
  </data>
  <data name="ClipItemFileNameTaken" xml:space="preserve">
    <value>Filename is already taken</value>
  </data>
  <data name="ClipItemIllegalCharacter" xml:space="preserve">
    <value>Filename cannot contain</value>
  </data>
  <data name="ClipItemZeroLength" xml:space="preserve">
    <value>Clip Length is 0 second</value>
  </data>
  <data name="DownloadPageDirectory" xml:space="preserve">
    <value>Directory:</value>
  </data>
  <data name="DownloadPageDone" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="DownloadPageDuration" xml:space="preserve">
    <value>Duration:</value>
  </data>
  <data name="DownloadPageOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="DownloadPageQueue" xml:space="preserve">
    <value>Queue</value>
  </data>
  <data name="DownloadPageQueuing" xml:space="preserve">
    <value>Queuing...</value>
  </data>
  <data name="DownloadPageTime" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="DownloadsListDescription" xml:space="preserve">
    <value>Sample Orders</value>
  </data>
  <data name="DownloadsPageTitle" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="FFmpegPathWarning" xml:space="preserve">
    <value>*You must have ffmpeg.exe for this program to work.</value>
  </data>
  <data name="Instruction" xml:space="preserve">
    <value>instructions</value>
  </data>
  <data name="MainPageBugsFirstHalf" xml:space="preserve">
    <value>If you encounter bugs, or have suggestions of improvements, you can open an issue at the </value>
    <comment>This is for the part of the sentence before "github repository" because grammar issues</comment>
  </data>
  <data name="MainPageBugsSecondHalf" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="MainPageGitHubRepository" xml:space="preserve">
    <value>github repository</value>
  </data>
  <data name="MainPagePurpose" xml:space="preserve">
    <value>youtube-dl supports downloading youtube videos, however it does not support downloading clips. There are some post-process arguements that allows it, however youtube-dl.exe still downloads the whole video first, then cut out the clips. Which means if you only need 10 seconds of content from a video that is 8 hours long, youtube-dl.exe will download the whole video still. This program essentially grabs the information needed to download the video, then feed it into ffmpeg.exe, which is able to download only part of the video.</value>
  </data>
  <data name="MainPagePurposeTitle" xml:space="preserve">
    <value>The purpose of this program:</value>
  </data>
  <data name="MainPageTitle" xml:space="preserve">
    <value>Main Page</value>
  </data>
  <data name="MainPageUsage" xml:space="preserve">
    <value>Go to setting, set your youtube-dl.exe and ffmpeg.exe, then the program is ready to use.</value>
  </data>
  <data name="MainPageUsageTitle" xml:space="preserve">
    <value>Usage:</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="SettingsBrowse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="SettingsCategorizeByChannel" xml:space="preserve">
    <value>Categorize by channel</value>
  </data>
  <data name="SettingsCategorizeByDate" xml:space="preserve">
    <value>Categorize by date</value>
  </data>
  <data name="SettingsCategorizeByVideo" xml:space="preserve">
    <value>Categorize by video</value>
  </data>
  <data name="SettingsChannelName" xml:space="preserve">
    <value>Channel\</value>
  </data>
  <data name="SettingsClipName" xml:space="preserve">
    <value>clip.mp4</value>
  </data>
  <data name="SettingsDownloadBaseFormat" xml:space="preserve">
    <value>Current Format:  DownloadPath\</value>
  </data>
  <data name="SettingsDownloadLocation" xml:space="preserve">
    <value>Download Location</value>
  </data>
  <data name="SettingsEmptyFileNameWarning" xml:space="preserve">
    <value>If a title or channel are made only of these characters, they'll be placed in a folder called Untitled.</value>
  </data>
  <data name="SettingsIllegalCharacterWarning" xml:space="preserve">
    <value>Note: Since windows doesn't allow filenames to contain \ / : * ? "&gt; &lt; or |, these characters will be emitted.</value>
  </data>
  <data name="SettingsPageAboutText" xml:space="preserve">
    <value>Settings page placeholder text.  Your app description goes here.</value>
  </data>
  <data name="SettingsPageChooseThemeText" xml:space="preserve">
    <value>Choose Theme</value>
  </data>
  <data name="SettingsPageFfmpegPath" xml:space="preserve">
    <value>Location of ffmpeg.exe</value>
  </data>
  <data name="SettingsPageFontSize" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="SettingsPageLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SettingsPagePersonalizationTitle" xml:space="preserve">
    <value>Personalization</value>
  </data>
  <data name="SettingsPageRadioButtonDarkTheme" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="SettingsPageRadioButtonLightTheme" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="SettingsPageRadioButtonWindowsDefaultTheme" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="SettingsPageTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsPageYoutube" xml:space="preserve">
    <value>Youtube Login (Skips ads on YouTube Premium)</value>
  </data>
  <data name="SettingsPageYoutubeDLPath" xml:space="preserve">
    <value>Location of youtube-dl.exe</value>
  </data>
  <data name="SettingsVerifying" xml:space="preserve">
    <value>Verifying, Please wait...</value>
  </data>
  <data name="SettingsVideoTitle" xml:space="preserve">
    <value>Video\</value>
  </data>
  <data name="ShellAddNewDownload" xml:space="preserve">
    <value>Add a download</value>
  </data>
  <data name="ShellDownloadsPage" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="ShellGoBackButton" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="ShellHamburgerButtonName" xml:space="preserve">
    <value>Open or close navigation</value>
  </data>
  <data name="ShellMainPage" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="ShellSettingsPage" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="VideoPageAddMoreClip" xml:space="preserve">
    <value>Add More Clip</value>
  </data>
  <data name="VideoPageCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="VideoPageDownload" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="VideoPageEndTime" xml:space="preserve">
    <value>End:</value>
  </data>
  <data name="VideoPageFileName" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="VideoPagePreparingVideo" xml:space="preserve">
    <value>Preparing video...</value>
  </data>
  <data name="VideoPageStartTime" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="YoutubeDLPathWarning" xml:space="preserve">
    <value>*You must have youtube-dl.exe for this program to work. </value>
  </data>
</root>