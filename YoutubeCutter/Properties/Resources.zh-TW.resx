<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>YoutubeCutter</value>
  </data>
  <data name="ClipItemDuration" xml:space="preserve">
    <value>長度:</value>
  </data>
  <data name="ClipItemEndLongerThanVideo" xml:space="preserve">
    <value>剪輯終點不在原影片內</value>
  </data>
  <data name="ClipItemEndTimeEarlier" xml:space="preserve">
    <value>剪輯終點在起點之前</value>
  </data>
  <data name="ClipItemFileAlreadyExists" xml:space="preserve">
    <value>硬碟上已經有這個檔案</value>
  </data>
  <data name="ClipItemFileNameTaken" xml:space="preserve">
    <value>檔案名重複</value>
  </data>
  <data name="ClipItemIllegalCharacter" xml:space="preserve">
    <value>檔案名不可含有</value>
  </data>
  <data name="ClipItemZeroLength" xml:space="preserve">
    <value>剪輯時長為0秒</value>
  </data>
  <data name="DownloadPageDirectory" xml:space="preserve">
    <value>資料夾:</value>
  </data>
  <data name="DownloadPageDone" xml:space="preserve">
    <value>已完成</value>
  </data>
  <data name="DownloadPageDuration" xml:space="preserve">
    <value>時長:</value>
  </data>
  <data name="DownloadPageOpen" xml:space="preserve">
    <value>開啟</value>
  </data>
  <data name="DownloadPageQueue" xml:space="preserve">
    <value>下載</value>
  </data>
  <data name="DownloadPageQueuing" xml:space="preserve">
    <value>等待中...</value>
  </data>
  <data name="DownloadPageTime" xml:space="preserve">
    <value>剪輯:</value>
  </data>
  <data name="DownloadsPageTitle" xml:space="preserve">
    <value>下載</value>
  </data>
  <data name="FFmpegPathWarning" xml:space="preserve">
    <value>*這個程式需要ffmpeg.exe才能運行，</value>
  </data>
  <data name="Instruction" xml:space="preserve">
    <value>教學</value>
  </data>
  <data name="MainPageBugsFirstHalf" xml:space="preserve">
    <value>如果你遭遇到bug或是有想要的功能，可以去</value>
  </data>
  <data name="MainPageBugsSecondHalf" xml:space="preserve">
    <value>開新的issue。</value>
  </data>
  <data name="MainPageGitHubRepository" xml:space="preserve">
    <value>本程式的github repo</value>
  </data>
  <data name="MainPagePurpose" xml:space="preserve">
    <value>雖然youtube-dl.exe可以下載youtube影片，本身也可以用postprocess等參數指定要下載的片段，但youtube-dl.exe的作法會是先下載整部影片然後再進行剪輯，意思是如果你只需要一部8個小時影片中的10秒，youtube-dl.exe仍會下載整整8個小時的影片。本程式就是從youtube-dl.exe讀取下載所需的資料，再用ffmpeg.exe下載指定的片段。</value>
  </data>
  <data name="MainPagePurposeTitle" xml:space="preserve">
    <value>本程式的目的</value>
  </data>
  <data name="MainPageTitle" xml:space="preserve">
    <value>主頁</value>
  </data>
  <data name="MainPageUsage" xml:space="preserve">
    <value>去設定頁設置好youtube-dl.exe和ffmpeg.exe，然後就可以開始使用了</value>
  </data>
  <data name="MainPageUsageTitle" xml:space="preserve">
    <value>用法:</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>。</value>
  </data>
  <data name="SettingsBrowse" xml:space="preserve">
    <value>瀏覽</value>
  </data>
  <data name="SettingsCategorizeByChannel" xml:space="preserve">
    <value>用頻道分類</value>
  </data>
  <data name="SettingsCategorizeByDate" xml:space="preserve">
    <value>用日期分類</value>
  </data>
  <data name="SettingsCategorizeByVideo" xml:space="preserve">
    <value>用影片分類</value>
  </data>
  <data name="SettingsChannelName" xml:space="preserve">
    <value>頻道名\</value>
  </data>
  <data name="SettingsClipName" xml:space="preserve">
    <value>剪輯.mp4</value>
  </data>
  <data name="SettingsDownloadBaseFormat" xml:space="preserve">
    <value>當前格式: 下載資料夾\</value>
  </data>
  <data name="SettingsDownloadLocation" xml:space="preserve">
    <value>下載資料夾</value>
  </data>
  <data name="SettingsEmptyFileNameWarning" xml:space="preserve">
    <value>如果影片名或頻道名全以非法字元組成，資料夾名稱會用"Untitled"代替</value>
  </data>
  <data name="SettingsIllegalCharacterWarning" xml:space="preserve">
    <value>注意: Windows不允許檔案或資料夾名稱包含\ / : * ? "&gt; &lt; 或 |，下載時將會刪去這些字元 </value>
  </data>
  <data name="SettingsPageChooseThemeText" xml:space="preserve">
    <value>選擇外觀主題</value>
  </data>
  <data name="SettingsPageFfmpegPath" xml:space="preserve">
    <value>ffmpeg.exe的位置</value>
  </data>
  <data name="SettingsPageFontSize" xml:space="preserve">
    <value>字體大小</value>
  </data>
  <data name="SettingsPageLanguage" xml:space="preserve">
    <value>語言</value>
  </data>
  <data name="SettingsPagePersonalizationTitle" xml:space="preserve">
    <value>個人化</value>
  </data>
  <data name="SettingsPageRadioButtonDarkTheme" xml:space="preserve">
    <value>灰暗</value>
  </data>
  <data name="SettingsPageRadioButtonLightTheme" xml:space="preserve">
    <value>明亮</value>
  </data>
  <data name="SettingsPageRadioButtonWindowsDefaultTheme" xml:space="preserve">
    <value>預設</value>
  </data>
  <data name="SettingsPageTitle" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="SettingsPageYoutube" xml:space="preserve">
    <value>Youtube Login (Skips ads on YouTube Premium)</value>
  </data>
  <data name="SettingsPageYoutubeDLPath" xml:space="preserve">
    <value>youtube-dl.exe的位置</value>
  </data>
  <data name="SettingsVerifying" xml:space="preserve">
    <value>驗證中，請稍後...</value>
  </data>
  <data name="SettingsVideoTitle" xml:space="preserve">
    <value>影片\</value>
  </data>
  <data name="ShellAddNewDownload" xml:space="preserve">
    <value>開啟新的下載</value>
  </data>
  <data name="ShellDownloadsPage" xml:space="preserve">
    <value>下載管理員</value>
  </data>
  <data name="ShellGoBackButton" xml:space="preserve">
    <value>回上一頁</value>
  </data>
  <data name="ShellHamburgerButtonName" xml:space="preserve">
    <value>Open or close navigation</value>
  </data>
  <data name="ShellMainPage" xml:space="preserve">
    <value>主頁</value>
  </data>
  <data name="ShellSettingsPage" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="VideoPageAddMoreClip" xml:space="preserve">
    <value>新增剪輯</value>
  </data>
  <data name="VideoPageCancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="VideoPageDownload" xml:space="preserve">
    <value>下載</value>
  </data>
  <data name="VideoPageEndTime" xml:space="preserve">
    <value>終點:</value>
  </data>
  <data name="VideoPageFileName" xml:space="preserve">
    <value>檔案名</value>
  </data>
  <data name="VideoPagePreparingVideo" xml:space="preserve">
    <value>讀取資料中...</value>
  </data>
  <data name="VideoPageStartTime" xml:space="preserve">
    <value>起點...</value>
  </data>
  <data name="YoutubeDLPathWarning" xml:space="preserve">
    <value>*這個程式需要youtube-dl.exe才能運行，</value>
  </data>
</root>